# -*- coding: utf-8 -*-
"""KNNpred.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v6QkfW8c0dM2uJSFZwTkaMeSAkPZ-DG6
"""

import pandas as pd
from sklearn.model_selection import train_test_split

df = pd.read_csv('audio_features.csv')

X = df.iloc[:, :-1].values
y = df['covid'].values

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Distancia euclidiana"""

import numpy as np

def distancia_euclidiana(x1, x2):
    return np.sqrt(np.sum((x1 - x2)**2))

class KNN:
    def __init__(self, k=3):
        self.k = k

    def fit(self, X_train, y_train):
        self.X_train = np.array(X_train)
        self.y_train = np.array(y_train)

    def predecir(self, X_test):
        predicciones = [self._predecir(x) for x in X_test]
        return np.array(predicciones)

    def _predecir(self, x):
        distancias = [distancia_euclidiana(x, x_train) for x_train in self.X_train]

        idx_k_vecinos = np.argsort(distancias)[:self.k]

        k_vecinos_etiquetas = [self.y_train[i] for i in idx_k_vecinos]

        conteo_clases = {}
        for etiqueta in k_vecinos_etiquetas:
            if etiqueta in conteo_clases:
                conteo_clases[etiqueta] += 1
            else:
                conteo_clases[etiqueta] = 1

        clase_mas_comun = max(conteo_clases, key=conteo_clases.get)
        return clase_mas_comun

if __name__ == "__main__":
    modelo_knn = KNN(k=3)

    modelo_knn.fit(X_train, y_train)

    predicciones = modelo_knn.predecir(X_test)

    print("Predicciones:", predicciones)

    accuracy = np.mean(predicciones == y_test)
    print(f"Exactitud del modelo KNN: {accuracy * 100:.2f}%")

"""- El modelo cuenta con una precisión por encima del 90% por lo el modelo KNN resulta ser bastante útil al poder predecir correctamente muchos de los casos con éxito.
- Al observar las predicciones, parece que la mayoría de los resultados son "0" (no COVID), lo que podría indicar que hay más ejemplos de esta clase en el conjunto de datos. Esto podría estar influenciando el modelo a predecir más veces la clase dominante.


"""